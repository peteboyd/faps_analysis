=== ANALYSIS.PY ===

Author: Peter Boyd
Description: This code was written to analyse the output of a series of grand 
    canonical monte carlo simulations as run by the wrapper program "faps"

This program has a series of tools which can produce or interpret datasets of
MOFs. The main utilities are to produce a dataset of randomly selected MOFs
or to compile a report on some MOFs which have been evaluated for their
CO2 uptake.

The execution of this code is done on the command line with many arguments
which are passed to the program using the optionparser module standard in 
python.  

=== PRODUCING A DATASET ===

To produce a dataset in analysis.py, the following commands can be used:

-s  -- True/False flag indicating a dataset is requested  (required)
-c [filename] -- indicate the csv file containing all the MOFs. (required)
-q [filename] -- indicate the sql file containing functionalizations of 
                  all the MOFs (required)
-I [filename] -- indicate a file containing a list of MOFs which will be
                  IGNORED from the selection process. (optional)
-i "string,"  -- comma delimited string of functional groups to include
                  in the dataset. MOFs will exclusively have these as
                  functional groups. (optional)
-x "string,"  -- comma delimited string of functional groups to exclude
                  from the dataset. (optional)
-p "string,"  -- comma delimited string of functional groups to include
                  there is no restriction on other functional groups in
                  the MOFs, with the exception of those included in '-x'.
                  (optional)
-L [dir]      -- look for the .cif files of all the mofs detailed in '-c'
                  in this directory.  If they aren't here, then they are
                  excluded from the selection process. (required)
-M "string,"  -- comma delimited string of metals which are contained in 
                  the MOFs. (required)
-G [integer]  -- maximum number of grid points for the electrostatic
                  potential as calculated by 'egulp' 
                  ***warning, setting this value may slow the code down
                     dramatically*** (optional)
-N [integer]  -- this sets the total number of MOFs in the dataset. 
                  setting -F over-rides this value. (default=120)
-F [integer]  -- sets the maximum number of MOFs containing a functional
                  group. (default=20)

NOTES: 
* the -c option reads a csv file for the mof names.  This csv file MUST
    contain a column of MOF names under the heading 'MOFname' as this is hard-
    coded in to the program.
